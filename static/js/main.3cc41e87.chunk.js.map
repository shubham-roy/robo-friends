{"version":3,"sources":["Components/SearchBox.js","Components/Card.js","Components/CardList.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","Card","id","name","email","src","alt","CardList","robots","map","robot","index","Scroll","props","children","App","onSearchCahnge","event","setState","searchValue","target","value","state","robotsList","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wQAUeA,EARG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKC,UAAU,aAAf,SACI,uBAAOC,KAAK,SAASC,YAAY,gBAAgBF,UAAU,gCAAgCG,SAAUJ,OCUlGK,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAErB,OACI,sBAAKP,UAAU,mDAAf,UACI,qBAAKQ,IAAG,+BAA0BH,EAA1B,YAAwCI,IAAI,UACpD,gCACI,6BAAKH,IACL,4BAAIC,WCILG,EAVE,SAAC,GAOd,OAP2B,EAAZC,OACUC,KAAI,SAACC,EAAOC,GACjC,OAAQ,cAAC,EAAD,CACJT,GAAIS,EACJR,KAAMO,EAAMP,KACZC,MAAOM,EAAMN,YCGVQ,G,MARA,SAACC,GACZ,OACI,qBAAKhB,UAAU,SAAf,SACKgB,EAAMC,aC2CJC,G,wDA1CX,aAAe,IAAD,8BACV,gBAmBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAnBzC,EAAKC,MAAQ,CACTH,YAAa,GACbI,WAAY,IAJN,E,qDAQd,WAAqB,IAAD,OAChBC,MAAM,8CAA8CC,MAChD,SAAAC,GACI,OAAOA,EAASC,UAEtBF,MACE,SAACG,GACG,EAAKV,SAAS,CAACK,WAAYK,S,oBASvC,WACI,MAAkCC,KAAKP,MAAhCH,EAAP,EAAOA,YACDW,EADN,EAAoBP,WACcQ,QAAO,SAACrB,GACtC,OAAOA,EAAMP,KAAK6B,cAAcC,SAASd,EAAYa,kBAGzD,OACI,sBAAKnC,UAAU,KAAf,UACI,oBAAIA,UAAU,MAAd,0BACA,cAAC,EAAD,CAAWD,aAAciC,KAAKb,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUR,OAAQsB,a,GApCpBI,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,8BACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.3cc41e87.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className=\"search pa2\">\n            <input type=\"search\" placeholder=\"Search Robots\" className=\"pa3 b--green bg-lightest-blue\" onChange={searchChange}></input>\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Card = ({id, name, email}) => {\n\n    return (\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robot\" />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n    const cardArray = robots.map((robot, index) => {\n        return (<Card \n            id={index} \n            name={robot.name} \n            email={robot.email} />);\n    });\n    return cardArray;\n};\n\nexport default CardList;","import React from 'react';\nimport './Scroll.css';\n\nconst Scroll = (props) => {\n    return (\n        <div className='scroll'>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React from 'react';\nimport SearchBox from '../Components/SearchBox'\nimport CardList from '../Components/CardList';\nimport Scroll from '../Components/Scroll'\nimport './App.css'\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            searchValue: '',\n            robotsList: []\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users').then(\n            response => {\n                return response.json();\n            }\n        ).then(\n            (users) => {\n                this.setState({robotsList: users});\n            }\n        )\n    }\n\n    onSearchCahnge = (event) => {\n        this.setState({searchValue: event.target.value});\n    };\n\n    render() {\n        const {searchValue, robotsList} = this.state;\n        const filteredRobots = robotsList.filter((robot) => {\n            return robot.name.toLowerCase().includes(searchValue.toLowerCase());\n        });\n\n        return (\n            <div className=\"tc\">\n                <h1 className=\"f-6\">Robo-Friends</h1>\n                <SearchBox searchChange={this.onSearchCahnge}/>\n                <Scroll>\n                    <CardList robots={filteredRobots}/>\n                </Scroll>\n            </div>\n        );\n    }\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}